<%#
 Copyright 2018-2019 Lienol <lawlienol@gmail.com>
 Licensed to the public under the Apache License 2.0.
-%>

<%
local kcptun_version=luci.sys.exec("/usr/bin/kcptun_client -v | awk '{print $3}'")
local dsp = require "luci.dispatcher"
-%>

<script type="text/javascript">
	//<![CDATA[
	var kcptunInfo;
	var tokenStr = '<%=token%>';
	var noUpdateText = '<%:已是最新版本%>';
	var updateSuccessText = '<%:更新成功.%>';
	var clickToUpdateText = '<%:点击更新%>';
	var inProgressText = '<%:正在更新...%>';
	var unexpectedErrorText = '<%:意外错误.%>';
	var updateInProgressNotice = '<%:正在更新，你确认要关闭吗？%>';

	window.onload = function() {
		var kcptunCheckBtn = document.getElementById('_kcptun-check_btn');
		var kcptunDetailElm = document.getElementById('_kcptun-check_btn-detail');
	};

	function addPageNotice_kcptun() {
		window.onbeforeunload = function(e) {
			e.returnValue = updateInProgressNotice;
			return updateInProgressNotice;
		};
	}

	function removePageNotice_kcptun() {
		window.onbeforeunload = undefined;
	}

	function onUpdateSuccess_kcptun(btn) {
		alert(updateSuccessText);

		if(btn) {
			btn.value = updateSuccessText;
			btn.placeholder = updateSuccessText;
			btn.disabled = true;
		}

		window.setTimeout(function() {
			window.location.reload();
		}, 1000);
	}

	function onRequestError_kcptun(btn, errorMessage) {
		btn.disabled = false;
		btn.value = btn.placeholder;

		if(errorMessage) {
			alert(errorMessage);
		}
	}

	function doAjaxGet(url, data, onResult) {
		new XHR().get(url, data, function(_, json) {
			var resultJson = json || {
				'code': 1,
				'error': unexpectedErrorText
			};

			if(typeof onResult === 'function') {
				onResult(resultJson);
			}
		})
	}

	function onBtnClick_kcptun(btn) {
		if(kcptunInfo === undefined) {
			checkUpdate_kcptun(btn);
		} else {
			doUpdate_kcptun(btn);
		}
	}

	function checkUpdate_kcptun(btn) {
		btn.disabled = true;
		btn.value = inProgressText;

		addPageNotice_kcptun();

		var ckeckDetailElm = document.getElementById(btn.id + '-detail');

		doAjaxGet('<%=dsp.build_url("admin/vpn/passwall/kcptun_check")%>', {
			token: tokenStr,
			arch: ''
		}, function(json) {
			removePageNotice_kcptun();

			if(json.code) {
				kcptunInfo = undefined;
				onRequestError_kcptun(btn, json.error);
			} else {
				if(json.update) {
					kcptunInfo = json;
					btn.disabled = false;
					btn.value = clickToUpdateText;
					btn.placeholder = clickToUpdateText;
					
					if(ckeckDetailElm) {
						var urlNode = '';
						if(json.version) {
							urlNode = '<em style="color:red;">最新版本号：' + json.version + '</em>';
							if(json.url && json.url.html) {
								urlNode = '<a href="' + json.url.html + '" target="_blank">' + urlNode + '</a>';
							}
						}
						ckeckDetailElm.innerHTML = urlNode;
					}
				} else {
					btn.disabled = true;
					btn.value = noUpdateText;
				}
			}
		});
	}

	function doUpdate_kcptun(btn) {
		btn.disabled = true;
		btn.value = '<%:下载中...%>';

		addPageNotice_kcptun();

		var kcptunUpdateUrl = '<%=dsp.build_url("admin/vpn/passwall/kcptun_update")%>';
		// Download file
		doAjaxGet(kcptunUpdateUrl, {
			token: tokenStr,
			url: kcptunInfo ? kcptunInfo.url.download : ''
		}, function(json) {
			if(json.code) {
				removePageNotice_kcptun();
				onRequestError_kcptun(btn, json.error);
			} else {
				btn.value = '<%:解压中...%>';

				// Extract file
				doAjaxGet(kcptunUpdateUrl, {
					token: tokenStr,
					task: 'extract',
					file: json.file,
					subfix: kcptunInfo ? kcptunInfo.type : ''
				}, function(json) {
					if(json.code) {
						removePageNotice_kcptun();
						onRequestError_kcptun(btn, json.error);
					} else {
						btn.value = '<%:移动中...%>';

						// Move file to target dir
						doAjaxGet(kcptunUpdateUrl, {
							token: tokenStr,
							task: 'move',
							file: json.file
						}, function(json) {
							removePageNotice_kcptun();
							if(json.code) {
								onRequestError_kcptun(btn, json.error);
							} else {
								onUpdateSuccess_kcptun(btn);
							}
						})
					}
				})
			}
		})
	}
	//]]>
</script>

<div class="cbi-value">
	<label class="cbi-value-title">Kcptun
		<%:Version%>
	</label>
	<div class="cbi-value-field">
		<div class="cbi-value-description">
			<img src="/luci-static/resources/cbi/help.gif">
			<span>【 <%=kcptun_version%>】</span>
		</div>
	</div>
</div>

<div class="cbi-value">
	<label class="cbi-value-title">
		<%:Manually update%>
	</label>
	<div class="cbi-value-field">
		<input class="cbi-button cbi-input-apply" type="submit" id="_kcptun-check_btn" onclick="onBtnClick_kcptun(this);" value="<%:Manually update%>">
		<span id="_kcptun-check_btn-detail"></span>
	</div>
</div>